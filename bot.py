# import nest_asyncio
# nest_asyncio.apply()

# import asyncio
# import logging
# from telegram import Update
# from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
# from apscheduler.schedulers.asyncio import AsyncIOScheduler

# # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
# logging.basicConfig(level=logging.INFO)

# # –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–∑–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Å–≤—ñ–π)
# BOT_TOKEN = "7914517419:AAHMV6VpW6u6oAGcSy9i0cRM1Dro8_WDmdk"

# # –ú–Ω–æ–∂–∏–Ω–∞ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è chat_id –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —è–∫—ñ –≤–∏–∫–ª–∏–∫–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É /start
# chat_ids = set()

# # –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start: –∑–±–µ—Ä—ñ–≥–∞—î–º–æ chat_id —Ç–∞ –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
# async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
#     chat_id = update.effective_chat.id
#     chat_ids.add(chat_id)
#     await update.message.reply_text(f"–ë–æ—Ç –ø—Ä–∞—Ü—é—î. –í–∞—à chat_id: {chat_id}")

# # –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è —â–æ–¥–µ–Ω–Ω–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—Å—ñ–º –∑–±–µ—Ä–µ–∂–µ–Ω–∏–º chat_id
# async def send_daily_message(application):
#     print("‚è∞ –í–∏–∫–æ–Ω–∞–Ω–æ –∑–∞–¥–∞—á—É: –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è")
#     for chat_id in chat_ids:
#         try:
#             await application.bot.send_message(
#                 chat_id=chat_id, text="–¶–µ —â–æ–¥–µ–Ω–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è! üåû"
#             )
#         except Exception as e:
#             logging.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {chat_id}: {e}")

# # –û—Å–Ω–æ–≤–Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è, —â–æ –Ω–∞–ª–∞—à—Ç–æ–≤—É—î –±–æ—Ç–∞ —ñ –ø–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫
# async def main():
#     # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫—É –±–æ—Ç–∞
#     application = ApplicationBuilder().token(BOT_TOKEN).build()

#     # –î–æ–¥–∞–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /start
#     application.add_handler(CommandHandler("start", start))

#     # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –ø–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫–∞ (APScheduler) –∑ —Ç–∞–π–º–∑–æ–Ω–æ—é "Europe/Kyiv"
#     scheduler = AsyncIOScheduler(timezone="Europe/Kyiv")
#     # –î–æ–¥–∞–≤–∞–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è: —â–æ–¥–Ω—è –æ 10:00 –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (—Ñ—É–Ω–∫—Ü—ñ—è send_daily_message)
#     scheduler.add_job(send_daily_message, trigger="cron", hour=23, minute=56, args=[application])
#     scheduler.start()

#     print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ. –°–ª—É—Ö–∞—î–º–æ –∫–æ–º–∞–Ω–¥–∏ —Ç–∞ –æ—á—ñ–∫—É—î–º–æ —â–æ–¥–µ–Ω–Ω–µ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è...")

#     # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞: –ø–∞—Ä–∞–º–µ—Ç—Ä close_loop=False –∑–∞–ø–æ–±—ñ–≥–∞—î —Å–ø—Ä–æ–±—ñ –∑–∞–∫—Ä–∏—Ç–∏ –∑–∞–ø—É—â–µ–Ω–∏–π event loop
#     await application.run_polling(close_loop=False)

# if __name__ == "__main__":
#     # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è asyncio.run –¥–ª—è –∑–∞–ø—É—Å–∫—É –æ—Å–Ω–æ–≤–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–º—É —Å–µ—Ä–µ–¥–æ–≤–∏—â—ñ
#     asyncio.run(main())


from apscheduler.schedulers.asyncio import AsyncIOScheduler
from telegram import Update
from telegram.ext import Application, ContextTypes
import logging

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)

# –¢–≤—ñ–π chat_id (–∑–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤—ñ–π)
CHAT_ID = '-4040228119'

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
async def send_daily_message(application: Application):
    # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞ –≤–∫–∞–∑–∞–Ω–∏–π chat_id
    await application.bot.send_message(chat_id=CHAT_ID, text="–ü—Ä–∏–≤—ñ—Ç,–π–æ–ø—Ç–∞")

# –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞
async def main():
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫—É –±–æ—Ç–∞
    application = Application.builder().token("7914517419:AAHMV6VpW6u6oAGcSy9i0cRM1Dro8_WDmdk").build()

    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –ø–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫–∞ (APScheduler) –∑ —Ç–∞–π–º–∑–æ–Ω–æ—é "Europe/Kyiv"
    scheduler = AsyncIOScheduler(timezone="Europe/Kyiv")
    # –î–æ–¥–∞–≤–∞–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è: —â–æ–¥–Ω—è –æ 23:46 –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (—Ñ—É–Ω–∫—Ü—ñ—è send_daily_message)
    scheduler.add_job(send_daily_message, trigger="cron", hour=00, minute=11, args=[application])
    
    # –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω—É–≤–∞–ª—å–Ω–∏–∫–∞
    scheduler.start()

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –Ω–∞ –ø—Ä–æ—Å–ª—É—Ö–æ–≤—É–≤–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥
    await application.run_polling()

if __name__ == "__main__":
    import nest_asyncio
    nest_asyncio.apply()  # –î–æ–¥–∞—Ç–∫–æ–≤–æ –¥–ª—è –∑–∞–ø—É—Å–∫—É –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏—Ö –∑–∞–¥–∞—á –≤ Jupyter —á–∏ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞—Ö –∑ –∞–∫—Ç–∏–≤–Ω–∏–º–∏ —Ü–∏–∫–ª—ñ—á–Ω–∏–º–∏ –ø–æ–¥—ñ—è–º–∏
    import asyncio
    asyncio.run(main())  # –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
